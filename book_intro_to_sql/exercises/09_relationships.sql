-- ** encyclopedia DB **
CREATE TABLE
  continents (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    continent_name varchar(50) NOT NULL UNIQUE
  );

ALTER TABLE countries
DROP COLUMN continent,
ADD COLUMN continent_id int NOT NULL,
ADD FOREIGN KEY (continent_id) REFERENCES continents (id);

INSERT INTO
  continents (continent_name)
VALUES
  ('Europe'),
  ('North America'),
  ('Asia'),
  ('Africa'),
  ('South America');

INSERT INTO
  countries (name, capital, population, continent_id)
VALUES
  ('France', 'Paris', 67158000, 1),
  ('USA', 'Washington D.C.', 325365189, 2),
  ('Germany', 'Berlin', 82349400, 1),
  ('Japan', 'Tokyo', 126672000, 3),
  ('Egypt', 'Cairo', 96308900, 4),
  ('Brazil', 'Brasilia', 208385000, 5);

CREATE TABLE
  albums (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200),
    release_date date,
    genre varchar(200),
    label varchar(100),
    singer_name varchar(100),
    singer_id int,
    FOREIGN KEY (singer_id) REFERENCES singers (id)
  );

INSERT INTO
  albums (name, release_date, genre, label, singer_name)
VALUES
  ('Born to Run', 'August 25, 1975', 'Rock and roll', 'Columbia', 'Bruce Springsteen'),
  ('Purple Rain', 'June 25, 1984', 'Pop, R&B, Rock', 'Warner Bros', 'Prince'),
  ('Born in the USA', 'June 4, 1984', 'Rock and roll, pop', 'Columbia', 'Bruce Springsteen'),
  ('Madonna', 'July 27, 1983', 'Dance-pop, post-disco', 'Warner Bros', 'Madonna'),
  ('True Blue', 'June 30, 1986', 'Dance-pop, Pop', 'Warner Bros', 'Madonna'),
  (
    'Elvis',
    'October 19, 1956',
    'Rock and roll, Rhythm and Blues',
    'RCA Victor',
    'Elvis Presley'
  ),
  (
    'Sign o'' the Times',
    'March 30, 1987',
    'Pop, R&B, Rock, Funk',
    'Paisley Park, Warner Bros',
    'Prince'
  ),
  ('G.I. Blues', 'October 1, 1960', 'Rock and roll, Pop', 'RCA Victor', 'Elvis Presley');

INSERT INTO
  singers (first_name, last_name, occupation, date_of_birth, deceased)
VALUES
  ('Elvis', 'Presley', 'Singer', 'January 8, 1935', TRUE);

UPDATE albums
SET
  singer_id = singers.id
FROM
  singers
WHERE
  CONCAT_WS(' ', singers.first_name, singers.last_name) = singer_name;

ALTER TABLE albums
DROP COLUMN singer_name;

-- ** ls_burger DB **
CREATE TABLE
  customers (id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name varchar(100));

CREATE TABLE
  email_addresses (
    customer_id int PRIMARY KEY,
    address varchar(150),
    FOREIGN KEY (customer_id) REFERENCES customers (id) ON DELETE CASCADE
  );

INSERT INTO
  customers (name)
SELECT DISTINCT
  customer_name
FROM
  orders;

ALTER TABLE orders
ADD COLUMN customer_id int,
ADD FOREIGN KEY (customer_id) REFERENCES customers (id) ON DELETE CASCADE;

-- Update customer_id FK
UPDATE orders
SET
  customer_id = customers.id
FROM
  customers
WHERE
  customer_name = customers.name;

ALTER TABLE orders
ALTER COLUMN customer_id
SET NOT NULL;

ALTER TABLE orders
DROP COLUMN customer_name;

INSERT INTO
  email_addresses (customer_id, address)
SELECT DISTINCT
  customer_id,
  customer_email
FROM
  orders;

ALTER TABLE orders
DROP COLUMN customer_email;

DELETE FROM email_addresses
WHERE
  address IS NULL;

CREATE TABLE
  products (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL,
    cost decimal(4, 2) NOT NULL DEFAULT 0,
    type varchar(20) NOT NULL,
    loyalty_points int DEFAULT 0
  );

INSERT INTO
  products (
    name,
    cost,
    type,
    loyalty_points
  )
VALUES
  ('LS Burger', 3.00, 'Burger', 10),
  ('LS Cheeseburger', 3.50, 'Burger', 15),
  ('LS Chicken Burger', 4.50, 'Burger', 20),
  ('LS Double Deluxe Burger', 6.00, 'Burger', 30),
  ('Fries', 1.20, 'Side', 3),
  ('Onion Rings', 1.50, 'Side', 5),
  ('Cola', 1.50, 'Drink', 5),
  ('Lemonade', 1.50, 'Drink', 5),
  ('Vanilla Shake', 2.00, 'Drink', 7),
  ('Chocolate Shake', 2.00, 'Drink', 7),
  ('Strawberry Shake', 2.00, 'Drink', 7);

CREATE TABLE
  order_items (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id int,
    product_id int,
    FOREIGN KEY (order_id) REFERENCES orders (id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products (id) ON DELETE CASCADE
  );

ALTER TABLE orders
ADD COLUMN status varchar(20) NOT NULL DEFAULT 'In Progress',
DROP COLUMN burger,
DROP COLUMN side,
DROP COLUMN drink,
DROP COLUMN customer_loyalty_points,
DROP COLUMN burger_cost,
DROP COLUMN side_cost,
DROP COLUMN drink_cost;

DELETE FROM orders;

INSERT INTO
  orders (customer_id, status)
VALUES
  (3, 'In Progress'),
  (1, 'Placed'),
  (1, 'Complete'),
  (2, 'Placed');

INSERT INTO
  order_items (order_id, product_id)
VALUES
  -- James:
  (5, 3),
  (5, 5),
  (5, 6),
  (5, 8),
  -- Natasha, order 1:
  (6, 2),
  (6, 5),
  (6, 7),
  -- Natasha, order 2:
  (7, 4),
  (7, 2),
  (7, 5),
  (7, 5),
  (7, 6),
  (7, 10),
  (7, 9),
  -- Aaron
  (8, 1),
  (8, 5);